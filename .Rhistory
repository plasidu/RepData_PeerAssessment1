hist(airquality$Ozone)
hist(airquality$Ozone,break=50)
hist(airquality$Ozone,breaks=50)
plot(airquality$Wind, airquality$Ozone)
with(airquality, plot(Wind, Ozone))
?boxplot
?boxplot
airquality
head(!!)
$_
last()
?pch
with(airquality, plot(Wind, Ozone))
example(points)
x11()
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
vim.interlace.rmd("test.rmd", outform = "pdf_document", rmddir = "/root/R", view = FALSE)
vim.interlace.rmd("test.rmd", outform = "html_document", rmddir = "/root/R", view = FALSE)
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
getcwd()
getwd()
knit('test.rmd')
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
require(knitr); .vim_oldwd <- getwd(); setwd("/root/R"); knit("test.Rmd"); setwd(.vim_oldwd); rm(.vim_oldwd)
knit2html('test.Rmd')
install.packages('markdown')
library(markdown)
markdownToHTML('test.md')
knit('test.Rmd');markdownToHTML('test.md')
knit('test.Rmd');markdownToHTML('test.md')
knit('test.Rmd');markdownToHTML('test.md')
markdownToHTML('test.md')
knit('test.Rmd');markdownToHTML('test.md')
markdownHTMLOptions
markdownHTMLOptions()
knit('test.Rmd');markdownToHTML('test.md')
knit('test.Rmd');markdownToHTML('test.md')
?markdown
?markdownToHTML
knit('test.Rmd');markdownToHTML('test.md', 'test.html'))
knit('test.Rmd');markdownToHTML('test.md', 'test.html')
install.packages()
setwd('data/repdata_w2/RepData_PeerAssessment1/')
data <- read.csc('activity.csv')
data <- read.csv('activity.csv')
head(data);names(data)
str(data$date)
head(as.Date(data$date))
str(as.Date(data$date))
head(strptime(data$date, %Y-%m-%d))
head(strptime(data$date, '%Y-%m-%d'))
head(as.Date(strptime(data$date, '%Y-%m-%d')))
hist(with(data, tapply(steps, date, FUN=mean)))
hist(with(data, tapply(steps, date, FUN=mean)))
mean(data$steps)
mean(data$steps,rm.na=T)
mean(data$steps,na.rm=T)
hist(with(data, tapply(steps, date, FUN=sum)))
with(data, tapply(steps, date, FUN=sum))
mean(with(data, tapply(steps, date, FUN=sum)))
mean(with(data, tapply(steps, date, FUN=sum)), na.rm=T)
meadian(with(data, tapply(steps, date, FUN=sum)), na.rm=T)
median(with(data, tapply(steps, date, FUN=sum)), na.rm=T)
knit('PA1_template.Rmd'), markdownToHTML('PA1_template.md', 'PA1.html)
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', 'PA1.html)
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', 'PA1.html')
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', OUTPUT=PA1.html)
?markdownToHTML
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
data$Date <- as.Date(data$date, "%Y-%m-%d")
hist(with(data, tapply(steps, date, FUN=sum)))
plot(interval ~ date, data, xaxt = "n", type = "l")
plot(date ~ interval, data, xaxt = "n", type = "l")
plot(date ~ interval, data, xaxt = "n", type = "1")
plot(interval ~ date, data, xaxt = "n", type = "1")
plot(interval ~ date, data, type = "1")
plot(interval ~ date, data, type = "1")
plot(date ~ interval, data, type = "1")
plot(date ~ interval, data, type = "l")
plot(date ~ interval, data, type = l)
plot(date ~ interval, data, type = l)
plot(date ~ interval, data, type = "l")
plot(date ~ interval, data$steps, type = "l")
plot(steps ~ interval, data, type = "l")
with(data, tapply(steps, interval, FUN=mean)
)
with(data, tapply(steps, interval, FUN=mean, na.rm=T))
with(data, plot(date ~ tapply(steps, interval, FUN=mean, na.rm=T), type='l'))
with(data, plot(date ~ tapply(data$steps, data$interval, FUN=mean, na.rm=T), type='l'))
mean_steps <- with(data, tapply(steps, interval, FUN=mean, na.rm=T))
plot(mean_steps ~ data$date)
head(mean_steps)
head(mean_steps[2,])
head(mean_steps[,2])
head(mean_steps[2])
head(mean_steps[2,1])
head(mean_steps[[1]])
head(mean_steps[[2]])
mean_steps[[2]]
mean_steps[[]]
as.numeric(mean_steps)
plot(date ~ intrval, data, type = "l")
plot(date ~ intrval, data, type = "l")
plot(date ~ interval, data, type = "l")
data <- read.csv('activity.csv')
plot(date ~ interval, data, type = "l")
plot(date ~ interval, data, type = "1")
plot(date ~ interval, data)
plot(date ~ interval, data, type = "l")
plot(data$date ~ data$interval, type = "l")
plot(data$date ~ as.numeric(mean_steps), type = "l")
plot(data$date ~ data$steps, type = "l")
plot(data$interval ~ as.numeric(mean_steps), type = "l")
plot(data$interval ~ as.numeric(mean_steps), type = "l")
plot(interval ~ steps, data, type = "l")
plot(steps ~ interval, data, type = "l")
plot(steps ~ interval, data, type = "p")
plot(steps ~ interval, data, type = "p")
length(mean_steps)
plot(mean_ steps, type='l')
plot(mean_steps, type='l')
plot(mean_steps, type='l')
mean_steps <- with(data, tapply(steps, interval, FUN=mean))
plot(mean_steps, type='l')
mean_steps <- with(data, tapply(steps, interval, FUN=mean, na.omit=T))
plot(mean_steps, type='l')
mean_steps <- with(data, tapply(steps, interval, FUN=mean, na.rm=T))
plot(mean_steps, type='l')
tail(mean_steps)
max(mean_steps)
names(mean)
names(mean_steps)
str(mean_steps)
mean_steps==0.1321
mean_steps==max(mean_steps)
mean_steps[mean_steps==max(mean_steps)]
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
sum(is.na(data$steps))
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
datb <- data
datb <- within(datb, steps <- ifelse(!is.na(steps), steps, meanSteps))
head(datb)
datb[[inteval==100]]
datb[[datb$inteval==100]]
datb[[datb$interval==100]]
datb[[interval==100]]
datb[interval==100]
datb$interval==100
datb$steps[[datb$interval==100]]
datb[[datb$interval==100]]
datb[datb$interval==100]
datb[[datb$interval=='100']]
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
knit('PA1_template.Rmd'); markdownToHTML('PA1_template.md', output='PA1.html')
knit2html('PA1_template.Rmd', output=PA1.html)
knit2html('PA1_template.Rmd', output='PA1.html')
weekdays(datb$date)
with(datb, lapply(date, function(aux) auxisWeekday <- function(date) {
if(date=="Saturday"|date=="Sunday") {
return 0}
else {return 1}
isWeekday <- function(date) {
if(date=="Saturday"|date=="Sunday") {
form <- 0}
else {form <- 1}
print(form)
}
isWeekday <- function(date) {
if(weekdays(date)=="Saturday"|weekdays(date)=="Sunday") {
form <- 0}
else {form <- 1}
print(form)
}
isWeekday(as.Date("2012-11-18"))
isWeekday(as.Date("2012-11-19"))
if(isWeekday(as.Date("2012-11-19"))==0){print('Weekend')}
if(isWeekday(as.Date("2012-11-18"))==0){print('Weekend')}
datb$weekpart <- cbind(datb, lapply(datb$date, isWeekday)
)
head(datb)
knit2html('PA1_template.Rmd', output='PA1.html')
